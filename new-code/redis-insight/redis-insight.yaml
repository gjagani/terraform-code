apiVersion: apps/v1
kind: Deployment
metadata:
  name: redisinsight
  namespace: db
  labels:
    app: redisinsight
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redisinsight
  template:
    metadata:
      labels:
        app: redisinsight
    spec:
      initContainers:
        - name: init
          image: busybox
          command:
            - /bin/sh
            - '-c'
            - chown -R 1001 /db
          resources: {}
          volumeMounts:
            - name: db
              mountPath: /db
          terminationMessagePath: /db/termination-log
          terminationMessagePolicy: File
      # imagePullSecrets:
      # - name: acr-auth-isgdfecontainers
      containers:
      - name:  redisinsight
        image: redislabs/redisinsight:1.14.0
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: db 
          mountPath: /db
        ports:
        - containerPort: 8001
          protocol: TCP
      volumes:
      - name: db
        persistentVolumeClaim:
          claimName: redis-insight
      nodeSelector:
        redins: "true"
      tolerations:
      - key: "kubernetes.azure.com/scalesetpriority"
        operator: "Equal"
        value: "spot"
        effect: "NoSchedule"
      affinity: 
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100  
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: type
                  operator: In
                  values:
                  - monitor
              topologyKey: "kubernetes.io/hostname"
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: type
                operator: In
                values:
                - db
                - web
                - webapi
                - gw
                - de
                - kb
                - fus
                - col 
                - di
            topologyKey: "kubernetes.io/hostname"
            namespaces: ["web","db","webapi","gw","de","kb","fus","monitoring","col","airflow","di"]
---
apiVersion: v1
kind: Service
metadata:
  name: redisinsight-service
  namespace: db
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  type: LoadBalancer
  ports:
  - port: 9020
    targetPort: 8001
  selector:
    app: redisinsight
