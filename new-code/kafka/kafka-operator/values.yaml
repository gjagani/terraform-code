# Default values for Koperator Helm chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

# Lists the secrets you need to use to pull kafka-operator image from a private registry.
imagePullSecrets: []
  # - private-registry-key

operator:
  annotations: {}
  image:
    repository: ghcr.io/banzaicloud/kafka-operator
    tag: "v0.25.1"
    pullPolicy: IfNotPresent
  # In constrained environments where operator cannot
  # be granted cluster level roles, users can configure
  # the Koperator to watch CRs only in specific set of
  # configurable Kubernetes namespaces.
  # In this scenario, users can replace the default
  # ClusterRole and ClusterRoleBinding to Role and RoleBinding respectively.
  # When this field is not empty and Cert-manager is used, 
  # the Cert-manager's Custom Resource Namespace must be included in the comma separated list.
  # When it is empty, all namespaces will be watched. 
  namespaces: "kb,kbdev"
  verboseLogging: false
  developmentLogging: false
  resources:
    limits:
      cpu: 75m
      memory: 1000Mi
    requests:
      cpu: 50m
      memory: 500Mi
  serviceAccount:
    create: true
    name: kafka-operator

webhook:
  enabled: true
#  serverPort:
#  tls:
#    certDir: ""
  certs:
    generate: true
    secret: "kafka-operator-serving-cert"

certManager:
  enabled: false
  # namespace field specifies the Cert-manager's Cluster Resource Namespace.
  # https://cert-manager.io/docs/configuration/
  namespace: "cert-manager"

certSigning:
  enabled: true

alertManager:
  enable: true
  port: 9001
  permissivePeerAuthentication:
    create: false

prometheusMetrics:
  enabled: true
  authProxy:
    enabled: true
    image:
      repository: gcr.io/kubebuilder/kube-rbac-proxy
      tag: v0.13.0
      pullPolicy: IfNotPresent
    serviceAccount:
      create: true
      name: kafka-operator-authproxy

#metricEndpoint:
#  port:

nameOverride: ""
fullnameOverride: ""

rbac:
  enabled: true

crd:
  enabled: true

nodeSelector:
  kafka: "true"
tolerations:
- key: "kubernetes.azure.com/scalesetpriority"
  operator: "Equal"
  value: "spot"
  effect: "NoSchedule"
affinity:
  podAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 1
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
              - kafka
              - zookeeper
              - monitor 
              - cruisecontrol
              - zookeeper-operator               
        topologyKey: "kubernetes.io/hostname"
        namespaces: ["kb","kbdev"]
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
    # - labelSelector:
    #     matchExpressions:
        # - key: app
        #   operator: In
        #   values:
        #     - cruisecontrol
        #     - zookeeper-operator
      # topologyKey: "kubernetes.io/hostname"
    - labelSelector:
        matchExpressions:
        # - key: app.kubernetes.io/name
        #   operator: In
        #   values:
        #     - kafka-operator
        - key: type
          operator: In
          values:
          - db
          - web
          - webapi
          - monitor
          - airflow
          - gw
          - col
          - di
          - de
          - fus
          - transit
          - etl
          - webapidev
          - webdev
          - dbdev
          - didev
      namespaces: [ "transit","etl","de","web","db","webapi","gw","de","kb","fus","monitoring","col","airflow","di","webapidev","webdev","dbdev","didev" ]
      topologyKey: "kubernetes.io/hostname"

## Additional Sidecars Configuration.
additionalSidecars: {}
# - name: nginx
#   image: nginx:latest

## Additional Environment Variables.
additionalEnv: {}

## Additional volumes required for sidecar(s).
additionalVolumes: {}
# - name: volume1
#   emptyDir: {}
# - name: volume2
#   emptyDir: {}

# Pod Security Context
# See https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
podSecurityContext: {}
# Container Security Context
containerSecurityContext: {}
